C# Application references

// Getting the set cursor position (The cursor position in C#)
https://www.geeksforgeeks.org/console-setcursorposition-method-in-c-sharp/
\\

// Playing sound in console
https://www.youtube.com/watch?v=wAYN2BABnG0
\\



// /u00b[32m Allennn /u0590[0m 

Programming task 



1. Build the Game UI{
    [] The Game Algorithm
        []Player Attack 
        [x]Player Health System
        [p]Player Progress Bar (Health and  Story Progress System)
        []High Score System
        {p} Game SFX and BGM
            // Partly done with the selection sound
                [x] Selection SFX
                [] BGM
                []

        []Enemyyyyyyy Algorithm  
        [] New Battle Pannel




}

2. Code and Design the game{
    [] Finalize
}


//////// Code Snippet

--> dotnet publish --configuration Release // Build the console app in to an -.exe file

Ternary Operations:
    --> string answer = five == 5 ? "true" : "false"

Colorization of console
    --> Console.BackgroundColor = ConsoleColor.Black;
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine("Red text over black.");
references <a href ="https://stackoverflow.com/questions/2743260/is-it-possible-to-write-to-the-console-in-colour-in-net">color</a>

ANSI color escape{
    --> 

    <ln>https://stackoverflow.com/questions/4842424/list-of-ansi-color-escape-sequences</ln>
}



List of the methods used

-> mainmenu.cs 


















--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Decorators




The Title Screen:


████████╗██╗  ██╗███████╗    ██╗      ██████╗ ███████╗████████╗    ██╗  ██╗███████╗██████╗ ██████╗  ██████╗ ███╗   ██╗
╚══██╔══╝██║  ██║██╔════╝    ██║     ██╔═══██╗██╔════╝╚══██╔══╝    ██║  ██║██╔════╝██╔══██╗██╔══██╗██╔═══██╗████╗  ██║
   ██║   ███████║█████╗      ██║     ██║   ██║███████╗   ██║       ███████║█████╗  ██████╔╝██████╔╝██║   ██║██╔██╗ ██║
   ██║   ██╔══██║██╔══╝      ██║     ██║   ██║╚════██║   ██║       ██╔══██║██╔══╝  ██╔══██╗██╔══██╗██║   ██║██║╚██╗██║
   ██║   ██║  ██║███████╗    ███████╗╚██████╔╝███████║   ██║       ██║  ██║███████╗██║  ██║██║  ██║╚██████╔╝██║ ╚████║
   ╚═╝   ╚═╝  ╚═╝╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝   ╚═╝       ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝
                                                                                                                      

The Game Over Screen 


  ▄████  ▄▄▄       ███▄ ▄███▓▓█████     ▒█████   ██▒   █▓▓█████  ██▀███  
 ██▒ ▀█▒▒████▄    ▓██▒▀█▀ ██▒▓█   ▀    ▒██▒  ██▒▓██░   █▒▓█   ▀ ▓██ ▒ ██▒
▒██░▄▄▄░▒██  ▀█▄  ▓██    ▓██░▒███      ▒██░  ██▒ ▓██  █▒░▒███   ▓██ ░▄█ ▒
░▓█  ██▓░██▄▄▄▄██ ▒██    ▒██ ▒▓█  ▄    ▒██   ██░  ▒██ █░░▒▓█  ▄ ▒██▀▀█▄  
░▒▓███▀▒ ▓█   ▓██▒▒██▒   ░██▒░▒████▒   ░ ████▓▒░   ▒▀█░  ░▒████▒░██▓ ▒██▒
 ░▒   ▒  ▒▒   ▓▒█░░ ▒░   ░  ░░░ ▒░ ░   ░ ▒░▒░▒░    ░ ▐░  ░░ ▒░ ░░ ▒▓ ░▒▓░
  ░   ░   ▒   ▒▒ ░░  ░      ░ ░ ░  ░     ░ ▒ ▒░    ░ ░░   ░ ░  ░  ░▒ ░ ▒░
░ ░   ░   ░   ▒   ░      ░      ░      ░ ░ ░ ▒       ░░     ░     ░░   ░ 
      ░       ░  ░       ░      ░  ░       ░ ░        ░     ░  ░   ░     

                                                     ░                          

Ending Screen 

,--,--'.        .-,--.       . 
`- |   |-. ,-.   `\__  ,-. ,-| 
 , |   | | |-'    /    | | | | 
 `-'   ' ' `-'   '`--' ' ' `-^ 


 ██╗      ██████╗ ██████╗ ███████╗
 ██║     ██╔═══██╗██╔══██╗██╔════╝
 ██║     ██║   ██║██║  ██║███████╗
 ██║     ██║   ██║██║  ██║╚════██║
 ███████╗╚██████╔╝██████╔╝███████║
 ╚══════╝ ╚═════╝ ╚═════╝ ╚══════╝

 Creaated By

     ██ ██████  ██    ██ ████████ ███████ 
    ███ ██   ██  ██  ██     ██    ██      
     ██ ██████    ████      ██    █████   
     ██ ██   ██    ██       ██    ██      
     ██ ██████     ██       ██    ███████ 


     ███╗   ███╗ ██████╗  ██████╗ ███████╗
     ████╗ ████║██╔═══██╗██╔════╝ ██╔════╝
     ██╔████╔██║██║   ██║██║  ███╗███████╗
     ██║╚██╔╝██║██║   ██║██║   ██║╚════██║
     ██║ ╚═╝ ██║╚██████╔╝╚██████╔╝███████║
     ╚═╝     ╚═╝ ╚═════╝  ╚═════╝ ╚══════╝
                                          
    
     ██▓     ▒█████  ▓█████▄   ██████ 
    ▓██▒    ▒██▒  ██▒▒██▀ ██▌▒██    ▒ 
    ▒██░    ▒██░  ██▒░██   █▌░ ▓██▄   
    ▒██░    ▒██   ██░░▓█▄   ▌  ▒   ██▒
    ░██████▒░ ████▓▒░░▒████▓ ▒██████▒▒
    ░ ▒░▓  ░░ ▒░▒░▒░  ▒▒▓  ▒ ▒ ▒▓▒ ▒ ░
    ░ ░ ▒  ░  ░ ▒ ▒░  ░ ▒  ▒ ░ ░▒  ░ ░
      ░ ░   ░ ░ ░ ▒   ░ ░  ░ ░  ░  ░  
        ░  ░    ░ ░     ░          ░  
                      ░               

                                  H   

███████╗██╗  ██╗███████╗███████╗██╗  ██╗██╗  ██╗██╗  ██╗
██╔════╝██║  ██║██╔════╝██╔════╝██║  ██║██║  ██║██║  ██║
███████╗███████║█████╗  ███████╗███████║███████║███████║
╚════██║██╔══██║██╔══╝  ╚════██║██╔══██║██╔══██║██╔══██║
███████║██║  ██║███████╗███████║██║  ██║██║  ██║██║  ██║
╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝
                                                             


                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------


/////-----> ANSI Colorization escape Code

 Console.WriteLine("\x1b[31mRed text\x1b[0m");     // Red text
        Console.WriteLine("\x1b[32mGreen text\x1b[0m");   // Green text
        Console.WriteLine("\x1b[33mYellow text\x1b[0m");  // Yellow text
        Console.WriteLine("\x1b[34mBlue text\x1b[0m");    // Blue text
        Console.WriteLine("\x1b[35mMagenta text\x1b[0m"); // Magenta text
        Console.WriteLine("\x1b[36mCyan text\x1b[0m");    // Cyan text
        Console.WriteLine("\x1b[37mWhite text\x1b[0m");   // White text

        Console.WriteLine("\x1b[1mBold text\x1b[0m");        // Bold text
        Console.WriteLine("\x1b[4mUnderlined text\x1b[0m"); // Underlined text
        Console.WriteLine("\x1b[7mInverse text\x1b[0m");    // Inverse text (swap background and foreground colors)


 // Text colors
        Console.WriteLine("\x1b[30mBlack\x1b[0m");
        Console.WriteLine("\x1b[31mRed\x1b[0m");
        Console.WriteLine("\x1b[32mGreen\x1b[0m");
        Console.WriteLine("\x1b[33mYellow\x1b[0m");
        Console.WriteLine("\x1b[34mBlue\x1b[0m");
        Console.WriteLine("\x1b[35mMagenta\x1b[0m");
        Console.WriteLine("\x1b[36mCyan\x1b[0m");
        Console.WriteLine("\x1b[37mWhite\x1b[0m");

        // Background colors
        Console.WriteLine("\x1b[40mBlack background\x1b[0m");
        Console.WriteLine("\x1b[41mRed background\x1b[0m");
        Console.WriteLine("\x1b[42mGreen background\x1b[0m");
        Console.WriteLine("\x1b[43mYellow background\x1b[0m");
        Console.WriteLine("\x1b[44mBlue background\x1b[0m");
        Console.WriteLine("\x1b[45mMagenta background\x1b[0m");
        Console.WriteLine("\x1b[46mCyan background\x1b[0m");
        Console.WriteLine("\x1b[47mWhite background\x1b[0m");

        // Text attributes
        Console.WriteLine("\x1b[1mBold text\x1b[0m");
        Console.WriteLine("\x1b[4mUnderlined text\x1b[0m");
        Console.WriteLine("\x1b[7mInverse colors\x1b[0m");

        // Combination of attributes and colors
        Console.WriteLine("\x1b[1;31mBold red text\x1b[0m");
        Console.WriteLine("\x1b[4;32mUnderlined green text\x1b[0m");
        Console.WriteLine("\x1b[1;4;33mBold and underlined yellow text\x1b[0m");


        Move cursor up: \x1b[A or \x1b[<n>A (where <n> is the number of lines to move up)
        Move cursor down: \x1b[B or \x1b[<n>B (where <n> is the number of lines to move down)
        Move cursor forward (right): \x1b[C or \x1b[<n>C (where <n> is the number of characters to move forward)
        Move cursor backward (left): \x1b[D or \x1b[<n>D (where <n> is the number of characters to move backward)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------



LOGS

Lerado -> The System.Threading could be only used for the constant updates of data such as the scores and healthbars. It is not supposed to used in the 
Displays of all of the necessary datas (Using the WritelIne Methods and or anny related methods in the C# libraries)















